"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
–ó–∞–ø—É—Å–∫: python init_db.py [--sql]

–í–∞—Ä—ñ–∞–Ω—Ç–∏:
- python init_db.py          # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î SQLAlchemy (db.create_all())
- python init_db.py --sql     # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î SQL —Ñ–∞–π–ª (database_schema.sql)
"""
import sys
from app import app
from my_project.db_init import db

def init_database_sqlalchemy():
    """–°—Ç–≤–æ—Ä—é—î –≤—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ —á–µ—Ä–µ–∑ SQLAlchemy"""
    with app.app_context():
        try:
            print("üîÑ –ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —á–µ—Ä–µ–∑ SQLAlchemy...")
            db.create_all()
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ —á–µ—Ä–µ–∑ SQLAlchemy!")
            print("üìä –í—Å—ñ —Ç–∞–±–ª–∏—Ü—ñ —Å—Ç–≤–æ—Ä–µ–Ω—ñ.")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}")
            raise

def init_database_from_sql():
    """–°—Ç–≤–æ—Ä—é—î –±–∞–∑—É –¥–∞–Ω–∏—Ö –∑ SQL —Ñ–∞–π–ª—É"""
    try:
        from init_from_sql import init_database_from_sql
        return init_database_from_sql()
    except ImportError:
        print("‚ùå –§–∞–π–ª init_from_sql.py –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return False

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    if len(sys.argv) > 1 and sys.argv[1] == '--sql':
        print("üóÑÔ∏è –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ SQL —Ñ–∞–π–ª –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó...")
        success = init_database_from_sql()
        if not success:
            print("\nüîÑ –°–ø—Ä–æ–±—É—î–º–æ —á–µ—Ä–µ–∑ SQLAlchemy...")
            init_database_sqlalchemy()
    else:
        print("üîß –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ SQLAlchemy –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó...")
        init_database_sqlalchemy()

if __name__ == '__main__':
    main()

