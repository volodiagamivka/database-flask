"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑ SQL —Ñ–∞–π–ª—É
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: python init_from_sql.py
"""
import os
import pymysql
from dotenv import load_dotenv

load_dotenv()

def init_database_from_sql():
    """–°—Ç–≤–æ—Ä—é—î –±–∞–∑—É –¥–∞–Ω–∏—Ö –∑ SQL —Ñ–∞–π–ª—É"""
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    db_host = os.getenv('DB_HOST', 'localhost')
    db_user = os.getenv('DB_USER', 'root')
    db_password = os.getenv('DB_PASSWORD', 'password')
    db_name = os.getenv('DB_NAME', 'hospitalss')
    db_port = int(os.getenv('DB_PORT', '3306'))
    
    print("üîÑ –ü–æ—á–∞—Ç–æ–∫ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö –∑ SQL —Ñ–∞–π–ª—É...")
    print(f"üìç –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ: {db_host}:{db_port}")
    print(f"üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö: {db_name}")
    print()
    
    try:
        # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MySQL —Å–µ—Ä–≤–µ—Ä–∞ (–±–µ–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö)
        connection = pymysql.connect(
            host=db_host,
            user=db_user,
            password=db_password,
            port=db_port,
            charset='utf8mb4'
        )
        
        with connection.cursor() as cursor:
            # –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑—É –¥–∞–Ω–∏—Ö —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î
            print("üìä –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...")
            cursor.execute(f"CREATE DATABASE IF NOT EXISTS {db_name} CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci")
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö '{db_name}' –≥–æ—Ç–æ–≤–∞")
            
            # –í–∏–±–∏—Ä–∞—î–º–æ –±–∞–∑—É –¥–∞–Ω–∏—Ö
            cursor.execute(f"USE {db_name}")
            
            # –ß–∏—Ç–∞—î–º–æ SQL —Ñ–∞–π–ª
            sql_file_path = os.path.join(os.path.dirname(__file__), 'database_schema.sql')
            
            if not os.path.exists(sql_file_path):
                print(f"‚ùå SQL —Ñ–∞–π–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {sql_file_path}")
                return False
            
            print("üìñ –ß–∏—Ç–∞–Ω–Ω—è SQL —Ñ–∞–π–ª—É...")
            with open(sql_file_path, 'r', encoding='utf-8') as file:
                sql_content = file.read()
            
            # –†–æ–∑–¥—ñ–ª—è—î–º–æ SQL –Ω–∞ –æ–∫—Ä–µ–º—ñ –∑–∞–ø–∏—Ç–∏
            sql_queries = [query.strip() for query in sql_content.split(';') if query.strip()]
            
            print(f"üîß –í–∏–∫–æ–Ω–∞–Ω–Ω—è {len(sql_queries)} SQL –∑–∞–ø–∏—Ç—ñ–≤...")
            
            for i, query in enumerate(sql_queries, 1):
                if query.upper().startswith('USE '):
                    continue  # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ USE –∑–∞–ø–∏—Ç–∏
                
                try:
                    cursor.execute(query)
                    if i % 10 == 0:  # –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å –∫–æ–∂–Ω—ñ 10 –∑–∞–ø–∏—Ç—ñ–≤
                        print(f"   –í–∏–∫–æ–Ω–∞–Ω–æ {i}/{len(sql_queries)} –∑–∞–ø–∏—Ç—ñ–≤...")
                except Exception as e:
                    print(f"‚ö†Ô∏è –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –∑–∞–ø–∏—Ç—É {i}: {e}")
                    continue
            
            connection.commit()
            print(f"‚úÖ –í—Å—ñ SQL –∑–∞–ø–∏—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–≤–æ—Ä–µ–Ω—ñ —Ç–∞–±–ª–∏—Ü—ñ
            cursor.execute("SHOW TABLES")
            tables = cursor.fetchall()
            print(f"\nüìã –°—Ç–≤–æ—Ä–µ–Ω–æ —Ç–∞–±–ª–∏—Ü—å: {len(tables)}")
            for table in tables:
                print(f"   - {table[0]}")
            
            # –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∞–Ω–∏—Ö
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–∏—Ö:")
            cursor.execute("SELECT COUNT(*) FROM hospitals")
            hospitals_count = cursor.fetchone()[0]
            cursor.execute("SELECT COUNT(*) FROM patients")
            patients_count = cursor.fetchone()[0]
            cursor.execute("SELECT COUNT(*) FROM doctors")
            doctors_count = cursor.fetchone()[0]
            cursor.execute("SELECT COUNT(*) FROM medications")
            medications_count = cursor.fetchone()[0]
            
            print(f"   üè• –õ—ñ–∫–∞—Ä–µ–Ω—å: {hospitals_count}")
            print(f"   üë• –ü–∞—Ü—ñ—î–Ω—Ç—ñ–≤: {patients_count}")
            print(f"   üë®‚Äç‚öïÔ∏è –õ—ñ–∫–∞—Ä—ñ–≤: {doctors_count}")
            print(f"   üíä –ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ñ–≤: {medications_count}")
        
        connection.close()
        print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ –∑ SQL —Ñ–∞–π–ª—É!")
        return True
        
    except Exception as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: {e}")
        print("\nüí° –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ:")
        print("   1. –ß–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –¥–∞–Ω—ñ –≤ .env —Ñ–∞–π–ª—ñ")
        print("   2. –ß–∏ –¥–æ—Å—Ç—É–ø–Ω–∏–π MySQL —Å–µ—Ä–≤–µ—Ä")
        print("   3. –ß–∏ —ñ—Å–Ω—É—î —Ñ–∞–π–ª database_schema.sql")
        return False

if __name__ == '__main__':
    init_database_from_sql()
